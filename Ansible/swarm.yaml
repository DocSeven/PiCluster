---

- name: Purge Swarm And GlusterFS
  hosts: all
  become: true
  tasks:
    - name: "Remove Docker Containers"
      shell: docker kill $(docker ps -a -q) && docker rm $(docker ps -a -q)
      failed_when: false
      no_log: True

    - name: "Force Leave Swarm"
      shell: docker swarm leave --force
      failed_when: false
      no_log: True

    - name: "Force Purge Docker Volume Plugin"
      shell: docker plugin rm gluster --force
      failed_when: false
      no_log: True

    - name: Remove Gluster Server
      apt: name=glusterfs-server state=absent purge=yes autoremove=yes
      poll: 10
      async: 40

    - name: Delete Gluster Volumes
      file:
        path: /glusterfs/distributed
        state: absent

- name: Init Swarm Managers
  hosts: docker_swarm_manager
  tasks:
    - name: Init Swarm
      docker_swarm:
        state: present
      register: token

- name: Init Swarm Workers
  hosts: docker_swarm_workers
  tasks:
    - name: Join Swarm
      docker_swarm:
        state: join
        advertise_addr: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        remote_addrs: "{{ hostvars[groups['docker_swarm_manager'][0]]['ansible_eth0']['ipv4']['address'] }}:2377"
        join_token: "{{ hostvars[groups['docker_swarm_manager'][0]]['token']['swarm_facts']['JoinTokens']['Worker'] }}"

- name: Install GlusterFS
  hosts: all
  become: true
  tasks:
    - name: "Install Gluster Server"
      apt: name=glusterfs-server state=latest
      poll: 10
      async: 40

    - name: Enable Gluster Service
      service:
        name: glusterd
        enabled: yes

    - name: Start Gluster Service
      service:
        name: glusterd
        state: started

    - name: Create Folder For GlusterFS
      file:
        path: /glusterfs/distributed
        state: directory

    - name: Install Docker Gluster Plugin
      shell: docker plugin install --alias gluster jmb12686/glusterfs-volume-plugin --grant-all-permissions --disable
      poll: 10
      async: 300

    - name: Setup Docker Plugin
      shell: docker plugin set gluster SERVERS="{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"

    - name: Enable Docker Plugin
      shell: docker plugin enable gluster

    - name: Create Docker Volume
      docker_volume:
        name: gfs
        driver: gluster

- name: Setup GlusterFS
  hosts: docker_swarm_manager
  become: true
  tasks:
    - name: Attach Peers
      gluster_peer:
        state: present
        nodes: "{{ groups['docker_swarm_workers'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"

    - name: Create Gluster Volume
      gluster_volume:
        state: present
        name: gfs
        replicas: "{{ groups['all'] | length }}"
        force: true
        bricks: /glusterfs/distributed
        cluster: "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | join(',') }}"
      run_once: true

- name: Setup Docker
  hosts: docker_swarm_manager
  tasks:
    - name: Create Overlay Network
      docker_network:
        name: spark
        driver: overlay
        attachable: yes
